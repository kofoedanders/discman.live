version: '3.2'

services:
  nginx:
    build:
      dockerfile: nginx/Dockerfile
      context: .
    container_name: nginx
    restart: unless-stopped
    volumes:
      - letsencrypt:/etc/letsencrypt
      - certbot:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - letsencrypt:/etc/letsencrypt
      - certbot:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  
  postgres:
    image: clkao/postgres-plv8:11-2
    container_name: postgres
    hostname: postgres
    restart: unless-stopped
    environment:
      - variables.env
    # ports:
    #   - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: "pg_isready -U postgres"
      interval: 10s
      timeout: 5s
      retries: 5

  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: 7.8.0
    restart: unless-stopped
    volumes:
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    # ports:
    #   - "9200:9200"
    #   - "9300:9300"
    environment:
      - variables.env

  logstash:
      build:
        context: logstash/
        args:
          ELK_VERSION: 7.8.0
      # ports:
      #   - "7000:7000/tcp"
      #   - "7000:7000/udp"
      #   - "9600:9600"
      restart: unless-stopped
      environment:
        - variables.env
      depends_on:
        - elasticsearch

  kibana:
    restart: unless-stopped
    build:
      context: kibana/
      args:
        ELK_VERSION: 7.8.0
    ports:
      - "9999:5601"
    depends_on:
      - elasticsearch

  web:
    image: sp1nakr/disclive:0.272
    container_name: discmanweb
    restart: unless-stopped
    #ports:
    #  - "80:80"
    env_file:
      - ./variables.env

volumes:
  elasticsearch:
  letsencrypt:
    driver: local
  certbot:
    driver: local
  db-data:


