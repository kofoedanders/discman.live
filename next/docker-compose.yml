version: "3.8"

services:

  npm:
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt

  postgres:
    image: clkao/postgres-plv8:11-2
    container_name: postgres
    hostname: postgres
    restart: unless-stopped
    environment:
      - variables.env
    #    ports:
    #      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: "pg_isready -U postgres"
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
     - POSTGRES_PASSWORD=oGm0BEQJh*aQG!*ij1Uu3qMMSHpjwKQKla5zKxRj
  
  rabbitmq:
    image: rabbitmq:3.9.11-alpine
    container_name: rabbitmq
    hostname: rabbitmq
    mem_limit: 512m
    restart:
      unless-stopped
      #ports:
      #- 15672:15672
      #- 5672:5672
    environment:
      - RABBITMQ_DEFAULT_USER=discman
      - RABBITMQ_DEFAULT_PASS=asdfjslkwqeruoipsdfnxzcvfjlkSADFSDFER4564645fsdgsg

  discmanweb:
    build:
      dockerfile: Web/Dockerfile
      context: .
    container_name: discmanweb
    restart: unless-stopped
    env_file:
      - ./variables.env
    depends_on:
      - rabbitmq
      - postgres
      
volumes:
  elasticsearch:
  letsencrypt:
    driver: local
  certbot:
    driver: local
  db-data: